#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

app=$YNH_APP_INSTANCE_NAME

# Source YunoHost helpers
	source /usr/share/yunohost/helpers

# Retrieve arguments
	domain=$(ynh_app_setting_get "$app" domain)
	path=$(ynh_app_setting_get "$app" path)
	is_public=$(ynh_app_setting_get "$app" is_public)

# Download source
	sudo wget -q https://raw.githubusercontent.com/keeweb/keeweb/gh-pages/index.html
	sudo wget -q https://raw.githubusercontent.com/keeweb/keeweb/gh-pages/manifest.appcache
	sudo sed -i.bak 's/(no-config)/config.json/g' index.html
		
# Copy source files
	src_path=/var/www/$app
	sudo mkdir -p $src_path
	sudo cp -a index.html manifest.appcache $src_path
	#sudo cp -a ../conf/config.json $src_path

# Set permissions to app files
	sudo chown -R root: $src_path

# Modify Nginx configuration file and copy it to Nginx conf directory
	sed -i "s@YNH_WWW_PATH@$path@g" ../conf/nginx.conf
	sed -i "s@YNH_WWW_ALIAS@$src_path/@g" ../conf/nginx.conf
	sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

# Migrate old apps
	if [ "$is_public" = "Yes" ]; then
		  ynh_app_setting_set "$app" is_public "1"
		  is_public=$(ynh_app_setting_get "$app" is_public)
	elif [ "$is_public" = "No" ]; then
		  ynh_app_setting_set "$app" is_public "0"
		  is_public=$(ynh_app_setting_get "$app" is_public)
	fi
	
# If app is public, add url to SSOWat conf as skipped_uris
	if [[ $is_public -eq 1 ]]; then
	  # unprotected_uris allows SSO credentials to be passed anyway.
	  ynh_app_setting_set "$app" unprotected_uris "/"
	fi

# Restart services
	sudo service nginx reload
